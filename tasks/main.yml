---
- name: Check if cluster consist of at least 2 nodes
  tags: ha-cluster-pacemaker
  fail: msg="Cluster must have at least 2 members"
  when: play_hosts|count() < 2
  run_once: true

- name: Include distribution version specific variables
  tags: ha-cluster-pacemaker
  include_vars: "el{{ ansible_distribution_major_version }}.yml"

- name: (RHEL only) enable repositories
  tags: ha-cluster-pacemaker
  include: rhel_repos.yml
  when: ansible_distribution == 'RedHat'

- name: Install packages from local media
  tags: ha-cluster-pacemaker
  include: install_local_media.yml
  when: use_local_media == true

- name: Install packages from system defined repositories
  tags: ha-cluster-pacemaker
  include: install_normal.yml
  when: use_local_media != true

# TODO allow to choose if to use FQDN or just short hostname, defaulting to short hostname
# WARNING: the 'ansible_fqdn' is resolved from /etc/hosts file! If you change hostname
# of machine through /etc/hosts the ansible will pick it up and use it!
- name: Add hosts to /etc/hosts
  tags: ha-cluster-pacemaker
  lineinfile:
  args:
    dest: '/etc/hosts'
    regexp: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} "
    line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ hostvars[item]['ansible_fqdn'].split('.')[0] }}"
  with_items: "{{ play_hosts }}"

- name: Create cluster system group
  tags: ha-cluster-pacemaker
  group: name={{ cluster_group }} state=present
- name: Create cluster system user
  tags: ha-cluster-pacemaker
  user: 
    name={{ cluster_user }} state=present
    password={{ cluster_user_pass | password_hash('sha512', ansible_hostname|replace('-','x')) }}
    groups={{ cluster_group }} comment="HA Cluster Administrator"

- name: Enable and start PCSD service
  tags: ha-cluster-pacemaker
  service: name=pcsd enabled=yes state=started

- name: Enable PCSD GUI if required
  tags: ha-cluster-pacemaker
  notify: restart pcsd
  lineinfile:
    dest: /etc/sysconfig/pcsd
    state: present
    regexp: '^PCSD_DISABLE_GUI=true'
    line: 'PCSD_DISABLE_GUI=false'
  when: cluster_enable_gui == true

- name: Setup firewall for RHEL/CentOS 6 systems (iptables)
  tags: ha-cluster-pacemaker
  include: firewall-el6.yml
  when: ansible_distribution_major_version == "6" and cluster_firewall == true

- name: Setup firewall for RHEL/CentOS 7 systems (firewalld)
  tags: ha-cluster-pacemaker
  include: firewall-el7.yml
  when: ansible_distribution_major_version == "7" and cluster_firewall == true

- name: Authorize cluster nodes
  tags: ha-cluster-pacemaker
  pcs_auth: node_name={{ hostvars[item]['ansible_fqdn'].split('.')[0] }} username={{ cluster_user }} password={{ cluster_user_pass }}
  with_items: '{{ play_hosts }}'

- name: Setup cluster
  tags: ha-cluster-pacemaker
  pcs_cluster: node_list="{% for item in play_hosts %}{{ hostvars[item]['ansible_hostname'] }} {% endfor %}" cluster_name="{{ cluster_name }}"
  run_once: true

- name: Start cluster services on all nodes
  tags: ha-cluster-pacemaker
  service: name={{ item }} state=started
  with_items:
    - pacemaker 
    - corosync

- name: Enable cluster services on boot
  tags: ha-cluster-pacemaker
  service: name={{ item }} enabled=yes
  when: cluster_enable_service == true
  with_items:
    - pacemaker 
    - corosync

### fencing setup
- name: Setup automatic fence_xvm
  tags: ha-cluster-pacemaker
  include: fence_xvm.yml
  when: cluster_configure_fence_xvm is defined and cluster_configure_fence_xvm == true

- name: Setup fence_kdump
  tags: ha-cluster-pacemaker
  include: fence_kdump.yml
  when: cluster_configure_fence_kdump is defined and cluster_configure_fence_kdump == true

- name: Setup custom fence devices
  tags: ha-cluster-pacemaker
  include: fence_custom.yml
